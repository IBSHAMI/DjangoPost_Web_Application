FROM python:3.10-buster

ARG --no-cache

# Adding trusting keys to apt for repositories
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -

# Adding Google Chrome to the repositories
RUN sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'

# Updating apt to see and install Google Chrome
RUN apt-get -y update

# Magic happens
RUN apt-get install -y google-chrome-stable

# Installing Unzip
RUN apt-get install -yqq unzip

# Download the Chrome Driver
RUN wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.comLATEST_RELEASE`/chromedriver_linux64.zip

# Unzip the Chrome Driver into /usr/local/bin directory
RUN unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/

# Set display port as an environment variable
ENV DISPLAY=:99

# Set up app directory
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

# Install Python dependencies
COPY ./backend/requirements.txt .
RUN python -m pip install --upgrade pip
RUN pip install --no-cache-dir -r requirements.txt
RUN rm requirements.txt

# Copy over the app code
COPY ./backend .

# Install Chrome
RUN dpkg -i ./bin/google-chrome.deb

# Convert line endings of runserver.sh
RUN apt-get update && apt-get install -y dos2unix && dos2unix celery.sh && apt-get --purge remove -y dos2unix && rm -rf /var/lib/apt/lists/*

# Set up the runserver.sh script
RUN chmod +x celery.sh

# Start the app with the runserver.sh script
CMD ["/bin/bash", "./celery.sh"]
